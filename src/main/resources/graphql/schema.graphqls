type Query {
    # Étudiant
    listEtudiants: [Etudiant]
    getEtudiantById(id: Float): Etudiant

    # Centre
    centres: [Centre]
    getCentreById(id: Float): Centre
}

type Mutation {
    # Étudiant
    addEtudiant(etudiant: EtudiantDTO): Etudiant
    updateEtudiant(id: Float, etudiant: EtudiantDTO): Etudiant
    deleteEtudiant(id: Float): String

    # Centre
    addCentre(nom: String, adresse: String): Centre
    updateCentre(id: Float, nom: String, adresse: String): Centre
    deleteCentre(id: Float): String
}
type Subscription{
    etudiantAdded:Etudiant
}
type Etudiant {
    id: Float
    nom: String
    prenom: String
    genre: String
    centre: Centre
}

type Centre {
    id: Int
    nom: String
    adresse: String
    listEtudiants: [Etudiant]
}

input EtudiantDTO {
    nom: String
    prenom: String
    genre: String
    centreId: Float
}
